//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""cace73f2-71cc-4565-b6ab-57d58e95445f"",
            ""actions"": [
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""1ea74818-6ccb-4ab8-b6f6-5e037b8cd9bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3888b4cf-0d95-4228-91bb-4e9ca262baef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""look"",
                    ""type"": ""Value"",
                    ""id"": ""8e567f83-6a6a-4b52-b010-0b73302b62d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""atack"",
                    ""type"": ""Button"",
                    ""id"": ""31dd0018-a438-42d1-a4d6-1d94636014cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""throwWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""56c4cee3-b600-4459-85aa-03416799b00f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""dropWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""27766205-2482-4ce5-b4b3-ca22e1f41ca4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""dropItem"",
                    ""type"": ""Button"",
                    ""id"": ""dcb355f0-628c-4cb4-83dc-0833126645b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""remove"",
                    ""type"": ""Button"",
                    ""id"": ""5197fbb6-538e-4824-917b-0f211acff271"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""openmenu"",
                    ""type"": ""Button"",
                    ""id"": ""28242a96-8775-482a-92e9-2ff85e7e1b63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""camera"",
                    ""type"": ""Value"",
                    ""id"": ""2e3bbdd0-fce9-4bf6-aa17-1ca23c665945"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""useItem"",
                    ""type"": ""Button"",
                    ""id"": ""18eab7a5-803f-49c4-a10d-a7c7ee5bec43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""run"",
                    ""type"": ""Button"",
                    ""id"": ""63084a7b-ddd9-4e57-b160-4f3fb654fd02"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""crouch"",
                    ""type"": ""Button"",
                    ""id"": ""49d8ff8b-740e-4f0a-aef2-397bd6007eae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6eb1b683-3beb-4512-9ae9-97d583b448ef"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4de60d7f-aed9-4723-a07c-e3f7963bd0dc"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""bd189509-2794-4e09-b8f8-ca3aeacb6b35"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cd42d95e-adf3-4ab4-9e3d-5666816517a2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""494b7680-03f4-43fd-9c6a-bcfc1eeae0f8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5292c7ed-d008-47d8-bf6d-803c82f7913e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a60a9bdc-8343-488b-bfe7-5a8f3d003ced"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""801baea3-ac0f-4c81-b671-ac081fa50fdc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d334187-f1f8-4a29-9778-686439da7eae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""atack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f74dadd-ca38-4e0d-b79c-4214185c1889"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""atack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a80a00b-dc47-4ea9-adca-7cb0aa4d2bdd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""dropWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b961979f-ac9e-4711-a1eb-a5766b95bdb4"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""dropWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec6181b1-260c-4e83-93b7-2511b9724442"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""throwWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c755d69-5294-485d-92c2-8c7143a01a15"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""throwWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef6a9107-8e72-44a8-a5e4-a85da6f3cc73"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""remove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83a09691-2b0d-4823-bd2f-a4419bd6429e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""openmenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f78de459-a8f6-4ce5-885d-b2e0a5dd7ec9"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""openmenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ace43003-c214-46e6-9525-6cfdba67f0eb"",
                    ""path"": ""/Mouse/Delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bf06945-a03a-4005-b39e-1f896c95ed40"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09208987-d142-4011-937a-0da7a6f4d003"",
                    ""path"": ""/Mouse/Delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8eb29cc9-f02e-40cc-b4e5-86c95a2b0ba7"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76818171-a3b6-402f-97d4-017572144db7"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""dropItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cf66a09-6a96-4e91-b767-5c6a6513600f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""dropItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98736381-5399-40b9-8193-ee168d5cfdf9"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""useItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a3ac198-b767-452a-b902-227b82f326da"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""useItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3efc658-0870-47be-9782-428f5a3064a9"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e921e0f-40c4-4c4d-b9eb-86596d81821b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerInputs"",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80bb42de-3958-4983-8761-d5536487179a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dbfcca0-e7bc-4dca-a8aa-ac7526cf0226"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PlayerInputs"",
            ""bindingGroup"": ""PlayerInputs"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_interact = m_Gameplay.FindAction("interact", throwIfNotFound: true);
        m_Gameplay_move = m_Gameplay.FindAction("move", throwIfNotFound: true);
        m_Gameplay_look = m_Gameplay.FindAction("look", throwIfNotFound: true);
        m_Gameplay_atack = m_Gameplay.FindAction("atack", throwIfNotFound: true);
        m_Gameplay_throwWeapon = m_Gameplay.FindAction("throwWeapon", throwIfNotFound: true);
        m_Gameplay_dropWeapon = m_Gameplay.FindAction("dropWeapon", throwIfNotFound: true);
        m_Gameplay_dropItem = m_Gameplay.FindAction("dropItem", throwIfNotFound: true);
        m_Gameplay_remove = m_Gameplay.FindAction("remove", throwIfNotFound: true);
        m_Gameplay_openmenu = m_Gameplay.FindAction("openmenu", throwIfNotFound: true);
        m_Gameplay_camera = m_Gameplay.FindAction("camera", throwIfNotFound: true);
        m_Gameplay_useItem = m_Gameplay.FindAction("useItem", throwIfNotFound: true);
        m_Gameplay_run = m_Gameplay.FindAction("run", throwIfNotFound: true);
        m_Gameplay_crouch = m_Gameplay.FindAction("crouch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_interact;
    private readonly InputAction m_Gameplay_move;
    private readonly InputAction m_Gameplay_look;
    private readonly InputAction m_Gameplay_atack;
    private readonly InputAction m_Gameplay_throwWeapon;
    private readonly InputAction m_Gameplay_dropWeapon;
    private readonly InputAction m_Gameplay_dropItem;
    private readonly InputAction m_Gameplay_remove;
    private readonly InputAction m_Gameplay_openmenu;
    private readonly InputAction m_Gameplay_camera;
    private readonly InputAction m_Gameplay_useItem;
    private readonly InputAction m_Gameplay_run;
    private readonly InputAction m_Gameplay_crouch;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @interact => m_Wrapper.m_Gameplay_interact;
        public InputAction @move => m_Wrapper.m_Gameplay_move;
        public InputAction @look => m_Wrapper.m_Gameplay_look;
        public InputAction @atack => m_Wrapper.m_Gameplay_atack;
        public InputAction @throwWeapon => m_Wrapper.m_Gameplay_throwWeapon;
        public InputAction @dropWeapon => m_Wrapper.m_Gameplay_dropWeapon;
        public InputAction @dropItem => m_Wrapper.m_Gameplay_dropItem;
        public InputAction @remove => m_Wrapper.m_Gameplay_remove;
        public InputAction @openmenu => m_Wrapper.m_Gameplay_openmenu;
        public InputAction @camera => m_Wrapper.m_Gameplay_camera;
        public InputAction @useItem => m_Wrapper.m_Gameplay_useItem;
        public InputAction @run => m_Wrapper.m_Gameplay_run;
        public InputAction @crouch => m_Wrapper.m_Gameplay_crouch;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @interact.started += instance.OnInteract;
            @interact.performed += instance.OnInteract;
            @interact.canceled += instance.OnInteract;
            @move.started += instance.OnMove;
            @move.performed += instance.OnMove;
            @move.canceled += instance.OnMove;
            @look.started += instance.OnLook;
            @look.performed += instance.OnLook;
            @look.canceled += instance.OnLook;
            @atack.started += instance.OnAtack;
            @atack.performed += instance.OnAtack;
            @atack.canceled += instance.OnAtack;
            @throwWeapon.started += instance.OnThrowWeapon;
            @throwWeapon.performed += instance.OnThrowWeapon;
            @throwWeapon.canceled += instance.OnThrowWeapon;
            @dropWeapon.started += instance.OnDropWeapon;
            @dropWeapon.performed += instance.OnDropWeapon;
            @dropWeapon.canceled += instance.OnDropWeapon;
            @dropItem.started += instance.OnDropItem;
            @dropItem.performed += instance.OnDropItem;
            @dropItem.canceled += instance.OnDropItem;
            @remove.started += instance.OnRemove;
            @remove.performed += instance.OnRemove;
            @remove.canceled += instance.OnRemove;
            @openmenu.started += instance.OnOpenmenu;
            @openmenu.performed += instance.OnOpenmenu;
            @openmenu.canceled += instance.OnOpenmenu;
            @camera.started += instance.OnCamera;
            @camera.performed += instance.OnCamera;
            @camera.canceled += instance.OnCamera;
            @useItem.started += instance.OnUseItem;
            @useItem.performed += instance.OnUseItem;
            @useItem.canceled += instance.OnUseItem;
            @run.started += instance.OnRun;
            @run.performed += instance.OnRun;
            @run.canceled += instance.OnRun;
            @crouch.started += instance.OnCrouch;
            @crouch.performed += instance.OnCrouch;
            @crouch.canceled += instance.OnCrouch;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @interact.started -= instance.OnInteract;
            @interact.performed -= instance.OnInteract;
            @interact.canceled -= instance.OnInteract;
            @move.started -= instance.OnMove;
            @move.performed -= instance.OnMove;
            @move.canceled -= instance.OnMove;
            @look.started -= instance.OnLook;
            @look.performed -= instance.OnLook;
            @look.canceled -= instance.OnLook;
            @atack.started -= instance.OnAtack;
            @atack.performed -= instance.OnAtack;
            @atack.canceled -= instance.OnAtack;
            @throwWeapon.started -= instance.OnThrowWeapon;
            @throwWeapon.performed -= instance.OnThrowWeapon;
            @throwWeapon.canceled -= instance.OnThrowWeapon;
            @dropWeapon.started -= instance.OnDropWeapon;
            @dropWeapon.performed -= instance.OnDropWeapon;
            @dropWeapon.canceled -= instance.OnDropWeapon;
            @dropItem.started -= instance.OnDropItem;
            @dropItem.performed -= instance.OnDropItem;
            @dropItem.canceled -= instance.OnDropItem;
            @remove.started -= instance.OnRemove;
            @remove.performed -= instance.OnRemove;
            @remove.canceled -= instance.OnRemove;
            @openmenu.started -= instance.OnOpenmenu;
            @openmenu.performed -= instance.OnOpenmenu;
            @openmenu.canceled -= instance.OnOpenmenu;
            @camera.started -= instance.OnCamera;
            @camera.performed -= instance.OnCamera;
            @camera.canceled -= instance.OnCamera;
            @useItem.started -= instance.OnUseItem;
            @useItem.performed -= instance.OnUseItem;
            @useItem.canceled -= instance.OnUseItem;
            @run.started -= instance.OnRun;
            @run.performed -= instance.OnRun;
            @run.canceled -= instance.OnRun;
            @crouch.started -= instance.OnCrouch;
            @crouch.performed -= instance.OnCrouch;
            @crouch.canceled -= instance.OnCrouch;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_PlayerInputsSchemeIndex = -1;
    public InputControlScheme PlayerInputsScheme
    {
        get
        {
            if (m_PlayerInputsSchemeIndex == -1) m_PlayerInputsSchemeIndex = asset.FindControlSchemeIndex("PlayerInputs");
            return asset.controlSchemes[m_PlayerInputsSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAtack(InputAction.CallbackContext context);
        void OnThrowWeapon(InputAction.CallbackContext context);
        void OnDropWeapon(InputAction.CallbackContext context);
        void OnDropItem(InputAction.CallbackContext context);
        void OnRemove(InputAction.CallbackContext context);
        void OnOpenmenu(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
    }
}
